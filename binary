#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *left, *right;
};

struct node *create()
{
    struct node *temp;
    int data;
    temp = (struct node *)malloc(sizeof(struct node));
    printf("\nEnter the data:");
    scanf("%d", &data);
    if(data==-1)
    {
        return NULL;
    }
    else
    {
        temp->data = data;
        printf("\nLeft child of %d : ", data);
        temp->left = create();
        printf("\nRight child of %d : ", data);
       
        temp->right = create();
        return temp;
    }
}

inorder(struct node*root)
{
    if(root==0)
    {
        return;
    }
    else
    {
        inorder(root->left);
        printf("%d,",root->data);
        inorder(root->right);
    }
}

preorder(struct node*root)
{
    if(root==0)
    {
        return;
    }
    else
    {
        printf("%d,",root->data);
        preorder(root->left);
        preorder(root->right);
    }
}

postorder(struct node*root)
{
    if(root==0)
    {
        return;
    }
    else
    {
        postorder(root->left);
        postorder(root->right);
        printf("%d,",root->data);
    }
}

void main()
{
    printf("Enter -1 if next data is NULL\n");
    struct node *root;
    root = create();

    printf("\nInorder is: ");
    inorder(root);

    printf("\nPreorder is: ");
    preorder(root);

    printf("\nPostorder is: ");
    postorder(root);
    printf("\n");
}
