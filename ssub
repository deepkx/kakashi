import socket

def subnetting(ip_address, subnet_mask):
    # Convert IP address and subnet mask to binary representation
    ip_address_binary = ''.join([format(int(octet), '08b') for octet in ip_address.split('.')])
    subnet_mask_binary = ''.join([format(int(octet), '08b') for octet in subnet_mask.split('.')])

    # Get network address by performing bitwise AND between IP address and subnet mask
    network_address_binary = ''.join([str(int(ip_address_binary[i]) & int(subnet_mask_binary[i])) for i in range(32)])

    # Convert network address binary back to dotted decimal format
    network_address = '.'.join([str(int(network_address_binary[8*i:8*(i+1)], 2)) for i in range(4)])

    return network_address

def start_server():
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind(('', 12345))
    server_socket.listen(1)

    print("Waiting for client to connect...")
    client_socket, client_address = server_socket.accept()
    print("Accepted connection from:", client_address)

    data = client_socket.recv(1024).decode()
    ip_address, subnet_mask = data.split(',')
    network_address = subnetting(ip_address, subnet_mask)

    client_socket.send(network_address.encode())

    client_socket.close()
    server_socket.close()

if _name_ == '_main_':
    start_server()
